<?xml version="1.0" encoding="utf-8"?>
<topic id="dbdbbdc6-bd5c-4f0c-87a1-a5bdeb27b02c" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>This article discusses techniques for accessing properties of electrical network elements, and for navigating between elements of the electrical network model.</para>
      <autoOutline lead="none" excludeRelatedTopics="true" />
    </introduction>
    <section address="accessingProperties">
      <title>Accessing Network Element Properties</title>
      <content>
        <para>Each <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkElement</codeEntityReference> has a number of properties that define network characteristics. For information on which properties are defined by which network elements, see:
      </para>
        <list class="bullet">
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Bus</codeEntityReference>
            </para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Generator</codeEntityReference>
            </para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Line</codeEntityReference>
            </para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Load</codeEntityReference>
            </para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkElement</codeEntityReference>
            </para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkModel</codeEntityReference>
            </para>
          </listItem>
        </list>
        <para>As a general pattern, phased properties (any property that contains information on a per-phase basis) has the word <codeInline>Phased</codeInline> as a suffix, e.g. <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.Bus.VoltagePhased</codeEntityReference> and <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.NetworkElement.ConnectedToPhased</codeEntityReference>. These <codeInline>Phased</codeInline> properties often have a corresponding aggregate property useful for analysing single-phase or balanced three-phase networks. As an example, <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Bus</codeEntityReference> has the property <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.Bus.Voltage</codeEntityReference>, which specifies the average voltage across all bus phases, as well as the aforementioned <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.Bus.VoltagePhased</codeEntityReference>. Likewise, <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkElement</codeEntityReference> contains the property <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.NetworkElement.ConnectedTo</codeEntityReference>, which returns all elements connected on any phase, in addition to the phased equivalent <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.NetworkElement.ConnectedToPhased</codeEntityReference>.</para>
      </content>
    </section>
    <section address="topology">
      <title>Traversing the Network Topology</title>
      <content>
        <para>
          Upon obtaining a <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkModel</codeEntityReference>, networks can be explored in a consistent manner. The <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkModel</codeEntityReference> object maintains separate lists of <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Bus</codeEntityReference>es, <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Line</codeEntityReference>s, <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Generator</codeEntityReference>s and <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.Load</codeEntityReference>s, and the relationships between them. Each network element has
          the property <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.NetworkElement.ConnectedTo</codeEntityReference>, which maintains a list of all <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkElement</codeEntityReference>s that a specific element is connected to. When used in conjunction with <externalLink>
            <linkText>LINQ</linkText>
            <linkUri>http://msdn.microsoft.com/en-us/library/vstudio/bb397926.aspx</linkUri>
          </externalLink>, means that executing complex queries for circuit details
          can be done in very few lines of code. It is strongly recommended that users familiarise themselves with LINQ if planning to traverse network topologies in ElecNetKit. The <link xlink:href="#seeAlsoSection">Related Content</link> section contains a number of resources useful for understanding LINQ.
        </para>
        <para>
          As an example of ElecNetKit model traversal, the code below finds all lines connected to a bus where
          the voltage is higher at the other end. This could be used iteratively, for example,
          to analytically detect the presence of DG when coordinated between a subset of
          network buses.
        </para>
        <code source="../Examples/Snippets/FindUpstreamConns.cs" language="c#" />
        <para>As of version 1.1, <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkModel</codeEntityReference>s can also be traversed using the phased property <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.NetworkElement.ConnectedToPhased</codeEntityReference>. The object model for phased connections is slightly different, with each element of <codeEntityReference qualifyHint="false">P:ElecNetKit.NetworkModelling.NetworkElement.ConnectedToPhased</codeEntityReference> specifying a target element and a target phase (see <codeEntityReference qualifyHint="false">T:ElecNetKit.NetworkModelling.NetworkElementConnection</codeEntityReference>).</para>
      </content>
    </section>

    <relatedTopics>
      <externalLink>
        <linkText>LINQ on MSDN</linkText>
        <linkUri>http://msdn.microsoft.com/en-us/library/vstudio/bb397926.aspx</linkUri>
      </externalLink>
      <externalLink>
        <linkText>Getting started with LINQ (C#) on MSDN</linkText>
        <linkUri>http://msdn.microsoft.com/en-us/library/vstudio/bb397933.aspx</linkUri>
      </externalLink>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
