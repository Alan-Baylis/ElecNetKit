<?xml version="1.0" encoding="utf-8"?>
<topic id="58652f95-5bc9-47fe-a12b-9edbe5170171" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">


    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>This walkthrough demonstrates a (very) simple use-case of ElecNetKit. The goal of this experiment is to measure the change in network voltages due to loads increasing by 10%.</para>
    </introduction>

    <!-- <prerequisites><content>Optional prerequisites info</content></prerequisites> -->

    <!-- One or more procedure or section with procedure -->
    <procedure>
      <title>A Minimal Working Example</title>
      <steps class="bullet">
        <step>
          <content>
            <para>
              First, make sure you've got a proper environment set up for using ElecNetKit. More instructions are provided in <link xlink:href="949e4556-eeed-4aea-b580-9cebbdbdab6d" />.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Before we start coding, download the example network package, and locate the file <fictitiousUri>IEEE13mod.dss</fictitiousUri>. We'll run our experiment on this network.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Create a new <ui>Visual C# console application</ui> targeting the <ui>.NET Framework 4.5</ui>. Name it <userInput>MinimalWorkingExample</userInput>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Add the following references (either from local copies or with <link xlink:href="http://nuget.org/">NuGet</link>):
            </para>
            <list class="bullet">
              <listItem>
                <para>
                  <codeInline>ElecNetKit.Core</codeInline> - contains the core functionality of ElecNetKit,
                </para>
              </listItem>
              <listItem>
                <para>
                  <codeInline>ElecNetKit.Engines.OpenDSS</codeInline> - provides access to the OpenDSS Simulator, and
                </para>
              </listItem>
              <listItem>
                <para>
                  <codeInline>System.Numerics</codeInline> - required for interacting with complex numbers.
                </para>
              </listItem>
            </list>
          </content>
        </step>
        <step>
          <content>
            <para>
              We need to write an experimentor that increases the size of each load by 10%. Choose <ui>Project | Add Class ...</ui> and type the name <userInput>LoadScalingExperimentor</userInput>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Modify the <fictitiousUri>LoadScalingExperimentor.cs</fictitiousUri> file as shown:
            </para>
            <code language="c#" source="../Examples/MinimalWorkingExample/LoadScalingExperimentor.cs" />
          </content>
        </step>
        <step>
          <content>
            <para>
              Now, we're ready to chain it all together. Add the following <codeInline>using</codeInline> directives at the top of the <fictitiousUri>Program.cs</fictitiousUri> file:
            </para>
            <code language="c#" source="../Examples/MinimalWorkingExample/Program.cs" region="Usings" />
          </content>
        </step>
        <step>
          <content>
            <para>
              Add the following code to your <codeInline>Main()</codeInline> method:
            </para>
            <code language="c#" source="../Examples/MinimalWorkingExample/Program.cs" region="Main" />
            <para>
              Don't forget to change the path in the above code to the location of the <fictitiousUri>IEEE13mod.dss</fictitiousUri> file!
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>Build and run the project. You should get output that looks like:</para>
            <code language="none" source="../Examples/MinimalWorkingExample/Output.txt" />
          </content>
        </step>
      </steps>
    </procedure>
    <section>
      <title>Additional Remarks</title>
      <content>
        <list class="bullet">
          <listItem>
            <para>
              Note that the implementation of <codeEntityReference qualifyHint="false">T:ElecNetKit.Experimentation.IExperimentor</codeEntityReference> in this example returns a list of strings that define commands to run on the network. These commands are specific syntax to OpenDSS, the simulator used in this example, and will not work in another simulator.
            </para>
          </listItem>
          <listItem>
            <para>
              You many notice that a particular simulator was never specified in code. <codeEntityReference qualifyHint="false">T:ElecNetKit.Simulator.NetworkController</codeEntityReference>s automatically detect and use any available simulator, and so in this case, simply adding the reference to <codeInline>ElecNetKit.Engines.OpenDSS</codeInline> was sufficient.
              This will not be the case in all applications, however. For more information on the method that ElecNetKit uses to choose simulators, take a look at the <codeEntityReference qualifyHint="false">T:ElecNetKit.Simulator.NetworkController</codeEntityReference> documentation, and read <link xlink:href="b36ba47f-638b-47f4-853a-58f5049dc794" />.
            </para>
          </listItem>
        </list>
      </content>
    </section>
    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
